popup = ~paste("<h3> Daten der Windkraftanlage</h3>",
"<b>Landkreis (LK):</b>",          lk_name, "<br>",
"<b>Verbandsgemeinde:</b>", vg_name, "<br>",
"<b>EEG-Nr.:</b>", eeg_nr,"<br>",
"<b>Leistung [kW]:</b>", leistung_s, "<br>",
"<b>NabenhÃ¶he [m]:</b>", nabe, "<br>",
"<b>Rotordurchmesser [m]:</b>", rotor, "<br>",
"<b>Stromertrag 2019 [MWh]:</b>", menge_mwh, "<br>",
"<b>Volllaststunden im LK 2019 [h]:</b>", flh, "<br>" ),
)
map
#create map
map <- leaflet(data = MaStR_Amprion_join_with_georeferences) %>%
addTiles() %>%
addCircleMarkers(lng = MaStR_Amprion_join_with_georeferences$l_wgs84,
lat = MaStR_Amprion_join_with_georeferences$b_wgs84,
color = "#F40707",
weight = 1,
radius = 3,
label = vg_name,
popup = ~paste("<h3> Daten der Windkraftanlage</h3>",
"<b>Landkreis (LK):</b>",          lk_name, "<br>",
"<b>Verbandsgemeinde:</b>", vg_name, "<br>",
"<b>EEG-Nr.:</b>", eeg_nr,"<br>",
"<b>Leistung [kW]:</b>", leistung_s, "<br>",
"<b>NabenhÃ¶he [m]:</b>", nabe, "<br>",
"<b>Rotordurchmesser [m]:</b>", rotor, "<br>",
"<b>Stromertrag 2019 [MWh]:</b>", menge_mwh, "<br>",
"<b>Volllaststunden im LK 2019 [h]:</b>", flh, "<br>" ),
)
map
#create map
map <- leaflet(data = MaStR_Amprion_join_with_georeferences) %>%
addTiles() %>%
addCircleMarkers(lng = MaStR_Amprion_join_with_georeferences$l_wgs84,
lat = MaStR_Amprion_join_with_georeferences$b_wgs84,
color = "#F40707",
weight = 2,
radius = 1,
label = vg_name,
popup = ~paste("<h3> Daten der Windkraftanlage</h3>",
"<b>Landkreis (LK):</b>",          lk_name, "<br>",
"<b>Verbandsgemeinde:</b>", vg_name, "<br>",
"<b>EEG-Nr.:</b>", eeg_nr,"<br>",
"<b>Leistung [kW]:</b>", leistung_s, "<br>",
"<b>NabenhÃ¶he [m]:</b>", nabe, "<br>",
"<b>Rotordurchmesser [m]:</b>", rotor, "<br>",
"<b>Stromertrag 2019 [MWh]:</b>", menge_mwh, "<br>",
"<b>Volllaststunden im LK 2019 [h]:</b>", flh, "<br>" ),
)
map
#use tmap
tm_shape(MaStR_Amprion_join_with_georeferences) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(pts2) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(pts) +
tm_text("pt", ymod = -1)
#use tmap
tm_shape(MaStR_Amprion_join_with_georeferences) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(MaStR_Amprion_join_with_georeferences) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape() +
tm_text("pt", ymod = -1)
#create CRF
rlp_utm <- st_crs("+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs")
tm_shape(MaStR_Amprion_join_with_georeferences) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(pts) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(pts) +
tm_text("pt", ymod = -1)
tm_shape(stas) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(pts) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(pts) +
tm_text("pt", ymod = -1)
?tm_shape
data("World")
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(pts) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(MaStR_Amprion_join_with_georeferences) +
tm_text("pt", ymod = -1)
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(MaStR_Amprion_join_with_georeferences) +
#create CRF
rlp_utm <- st_crs("+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs")
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(MaStR_Amprion_join_with_georeferences)
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(MaStR_Amprion_join_with_georeferences) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom"))
Sys.setenv(LANG = "en")
pacman::p_load(rio, data.table, tidyverse, tidyr, purrr, magrittr, compare,
ggplot2, leaflet, sp, raster, rgdal, htmltools, htmlwidgets,
tmaptools, sf, tmap)
MaStR_Amprion_join_with_georeferences <- read.csv("MaStR_Amprion_join_with_georeferences.csv")
attach(MaStR_Amprion_join_with_georeferences)
MaStR_Amprion_join_with_georeferences$l_wgs84 <- gsub(",",".", l_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- gsub(",",".", b_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$b_wgs84)
MaStR_Amprion_join_with_georeferences$l_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$l_wgs84)
#create map
#create map
map <- leaflet(data = MaStR_Amprion_join_with_georeferences) %>%
addTiles() %>%
addCircleMarkers(lng = MaStR_Amprion_join_with_georeferences$l_wgs84,
lat = MaStR_Amprion_join_with_georeferences$b_wgs84,
color = "#F40707",
weight = 2,
radius = 1,
label = vg_name,
popup = ~paste("<h3> Daten der Windkraftanlage</h3>",
"<b>Landkreis (LK):</b>",          lk_name, "<br>",
"<b>Verbandsgemeinde:</b>", vg_name, "<br>",
"<b>EEG-Nr.:</b>", eeg_nr,"<br>",
"<b>Leistung [kW]:</b>", leistung_s, "<br>",
"<b>NabenhÃ¶he [m]:</b>", nabe, "<br>",
"<b>Rotordurchmesser [m]:</b>", rotor, "<br>",
"<b>Stromertrag 2019 [MWh]:</b>", menge_mwh, "<br>",
"<b>Volllaststunden im LK 2019 [h]:</b>", flh, "<br>" ),
)
map
Sys.setenv(LANG = "en")
pacman::p_load(rio, data.table, tidyverse, tidyr, purrr, magrittr, compare,
ggplot2, leaflet, sp, raster, rgdal, htmltools, htmlwidgets,
tmaptools, sf, tmap)
######################
#distance calculation#
######################
class(MaStR_Amprion_join_with_georeferences)
coordinates(MaStR_Amprion_join_with_georeferences) <- ~ l_wgs84 + b_wgs84
class(MaStR_Amprion_join_with_georeferences)
writeOGR(ma_join.sp, "C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines", "distance_calc", driver = "ESRI Shapefile")
writeOGR(crest.sp, "C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines", "distance_calc", driver = "ESRI Shapefile")
?writeOGR
writeOGR(MaStR_Amprion_join_with_georeferences, "C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines", "distance_calc", driver = "ESRI Shapefile")
?readOGR
dist_calc <- readOGR("distance_calc.shp")
data("World")
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(dist_calc) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(pts) +
tm_text("pt", ymod = -1)
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(dist_calc) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(dist_calc) +
tm_text("pt", ymod = -1)
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(dist_calc) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(MaStR_Amprion_join_with_georeferences) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom"))
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(dist_calc) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(dist_calc) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom"))
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(MaStR_Amprion_join_with_georeferences) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom"))
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(dist_calc) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(pts) +
tm_text("pt", ymod = -1)
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(dist_calc) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(disc_calc) +
tm_text("pt", ymod = -1)
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(dist_calc) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom")) +
tm_shape(dist_calc) +
tm_text("pt", ymod = -1)
tm_shape(World) +
tm_polygons() +
tm_graticules(col = "grey60") +
tm_shape(dist_calc) +
tm_symbols(col = "black") +
tm_scale_bar(position = c("left", "bottom"))
distances <- st_distance(dist_calc)
distances <- st_distance(MaStR_Amprion_join_with_georeferences)
?st_distance
View(World)
##############################
#create dimple feature format#
##############################
sf <- st_read(system.file("distance_calc.shp", package="sf"))
##############################
#create dimple feature format#
##############################
sf <- st_read(system.file("C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines/distance_calc.shp", package="sf"))
?st_read
##############################
#create dimple feature format#
##############################
sf <- st_read("C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines/distance_calc.shp")
View(sf)
#########################
#distance between points#
#########################
distances <- st_distance(sf)
View(distances)
pacman::p_load(rio, data.table, tidyverse, tidyr, purrr, magrittr, compare,
ggplot2, leaflet, sp, raster, rgdal, htmltools, htmlwidgets,
tmaptools,maptools, raster, sf, tmap)
ppp  <- as.ppp(dist_calc)
ppp  <- as.ppp(sf)
?as.ppp
?as.ppp
library(sf)
library(maptools)
library(raster)
ppp  <- as.ppp(sf)
pacman::p_load(rio, data.table, tidyverse, tidyr, purrr, magrittr, compare,
ggplot2, leaflet, sp, raster, rgdal, htmltools, htmlwidgets,
tmaptools,maptools, raster, sf, tmap, spatstat)
ppp  <- as.ppp(sf)
Sys.setenv(LANG = "en")
pacman::p_load(rio, data.table, tidyverse, tidyr, purrr, magrittr, compare,
ggplot2, leaflet, sp, raster, rgdal, htmltools, htmlwidgets,
tmaptools,maptools, raster, sf, tmap, spatstat)
dist_calc <- readOGR("distance_calc.shp")
library(sf)
library(maptools)
library(raster)
sf <- st_read("C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines/distance_calc.shp")
ppp  <- as.ppp(sf)
library(spatstat)
setwd("C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines")
ppp  <- as.ppp("distance_calc.shp")
##############################
#PPA - Point Pattern Analysis#
##############################
rm(dist_calc, ppp, sf)
ppp  <- as.ppp("distance_calc.shp")
sf <- st_read("distance_calc.shp")
ppp  <- as.ppp(sf)
?Window
########################
#load boundaries of RLP#
########################
rlp  <- st_read("Borders_RLP_shape/Landesgrenze_RLP.shp")
border  <- as.owin(rlp)
View(rlp)
View(rlp)
border  <- as.owin(rlp)
Sys.setenv(LANG = "en")
pacman::p_load(rio, data.table, tidyverse, tidyr, purrr, magrittr, compare,
ggplot2, leaflet, sp, raster, rgdal, htmltools, htmlwidgets,
tmaptools,maptools, raster, sf, tmap, spatstat)
library(sf)
library(maptools)
library(raster)
library(spatstat)
sf <- st_read("distance_calc.shp")
ppp  <- as.ppp(sf)
########################
#load boundaries of RLP#
########################
rlp  <- st_read("Borders_RLP_shape/Landesgrenze_RLP.shp")
border  <- as.owin(rlp)
MaStR_Amprion_join_with_georeferences <- read.csv("MaStR_Amprion_join_with_georeferences.csv")
attach(MaStR_Amprion_join_with_georeferences)
MaStR_Amprion_join_with_georeferences$l_wgs84 <- gsub(",",".", l_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- gsub(",",".", b_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$b_wgs84)
MaStR_Amprion_join_with_georeferences$l_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$l_wgs84)
map <- leaflet(data = MaStR_Amprion_join_with_georeferences) %>%
addTiles() %>%
addCircleMarkers(lng = MaStR_Amprion_join_with_georeferences$l_wgs84,
lat = MaStR_Amprion_join_with_georeferences$b_wgs84,
color = "#F40707",
weight = 2,
radius = 1,
label = vg_name,
popup = ~paste("<h3> Daten der Windkraftanlage</h3>",
"<b>Landkreis (LK):</b>",          lk_name, "<br>",
"<b>Verbandsgemeinde:</b>", vg_name, "<br>",
"<b>EEG-Nr.:</b>", eeg_nr,"<br>",
"<b>Leistung [kW]:</b>", leistung_s, "<br>",
"<b>NabenhÃ¶he [m]:</b>", nabe, "<br>",
"<b>Rotordurchmesser [m]:</b>", rotor, "<br>",
"<b>Stromertrag 2019 [MWh]:</b>", menge_mwh, "<br>",
"<b>Volllaststunden im LK 2019 [h]:</b>", flh, "<br>" ),
)
map
border  <- as.owin(rlp)
rm(ppp)
wts  <- as.ppp(sf)
#
Window(wts) <- rlp
plot(rlp)
rlp_geom <- rlp$msGeometry
plot(rlp_geom)
plot(rlp_geom)
plot(rlp_rlp)
plot(rlp)
rm(rlp_geom)
#transform to flat
rlp_flat <- st_transform(rlp, crs = 6345)
plot(rlp_flat)
rlp_owin  <- as.owin(rlp_flat)
#create window of points with borders of rlp and plot
Window(wts) <- rlp_owin
plot(wts, main=NULL, cols=rgb(0,0,0,.2), pch=20)
sf <- st_read("distance_calc.shp")
wts  <- as.ppp(sf)
plot(wts)
Window(wts) <- rlp_owin
plot(wts, main=NULL, cols=rgb(0,0,0,.2), pch=20)
plot(wts, cols=rgb(0,0,0,.2), pch=20)
plot(wts, cols=rgb(1,1,1,.2), pch=20)
sf <- st_read("distance_calc.shp")
sf_flat <- st_transform(sf, crs = 6345)
MaStR_Amprion_join_with_georeferences$l_wgs84 <- gsub(",",".", l_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- gsub(",",".", b_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$b_wgs84)
MaStR_Amprion_join_with_georeferences$l_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$l_wgs84)
class(MaStR_Amprion_join_with_georeferences)
coordinates(MaStR_Amprion_join_with_georeferences) <- ~ l_wgs84 + b_wgs84
class(MaStR_Amprion_join_with_georeferences)
writeOGR(MaStR_Amprion_join_with_georeferences, "C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines", "distance_calc", driver = "ESRI Shapefile")
writeOGR(MaStR_Amprion_join_with_georeferences, "C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines", "distance_calc", driver = "ESRI Shapefile")
sf <- st_read("distance_calc.shp")
?coordinates
###################
#create shape file#
###################
class(MaStR_Amprion_join_with_georeferences)
###################
#create shape file#
###################
class(MaStR_Amprion_join_with_georeferences)
MaStR_Amprion_join_with_georeferences <- read.csv("MaStR_Amprion_join_with_georeferences.csv")
attach(MaStR_Amprion_join_with_georeferences)
MaStR_Amprion_join_with_georeferences$l_wgs84 <- gsub(",",".", l_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- gsub(",",".", b_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$b_wgs84)
MaStR_Amprion_join_with_georeferences$l_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$l_wgs84)
View(MaStR_Amprion_join_with_georeferences)
#check crs
crs(MaStR_Amprion_join_with_georeferences)
crs(MaStR_Amprion_join_with_georeferences) <- "+proj=lcc +lat_1=48 +lat_2=33 +lon_0=-100 +datum=WGS84"
#check crs
class(MaStR_Amprion_join_with_georeferences)
coordinates(MaStR_Amprion_join_with_georeferences) <- ~ l_wgs84 + b_wgs84
crs(MaStR_Amprion_join_with_georeferences)
crs(MaStR_Amprion_join_with_georeferences) <- "+proj=lcc +lat_1=48 +lat_2=33 +lon_0=-100 +datum=WGS84"
crs(MaStR_Amprion_join_with_georeferences)
###################
#create shape file#
###################
class(MaStR_Amprion_join_with_georeferences)
writeOGR(MaStR_Amprion_join_with_georeferences, "C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines", "distance_calc", driver = "ESRI Shapefile")
#####################
#load points pattern#
#####################
wts_shp <- st_read("distance_calc.shp")
MaStR_Amprion_join_with_georeferences <- read.csv("MaStR_Amprion_join_with_georeferences.csv")
attach(MaStR_Amprion_join_with_georeferences)
MaStR_Amprion_join_with_georeferences$l_wgs84 <- gsub(",",".", l_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- gsub(",",".", b_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$b_wgs84)
MaStR_Amprion_join_with_georeferences$l_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$l_wgs84)
class(MaStR_Amprion_join_with_georeferences)
coordinates(MaStR_Amprion_join_with_georeferences) <- ~ l_wgs84 + b_wgs84
crs(MaStR_Amprion_join_with_georeferences)
#create crs
WGS84 <- CRS("+proj=longlat +datum=WGS84")
crs(MaStR_Amprion_join_with_georeferences) <- WGS84
crs(MaStR_Amprion_join_with_georeferences)
class(MaStR_Amprion_join_with_georeferences)
writeOGR(MaStR_Amprion_join_with_georeferences, "C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines", "distance_calc", driver = "ESRI Shapefile")
#####################
#load points pattern#
#####################
wts_shp <- st_read("distance_calc.shp")
sf_flat <- st_transform(sf, crs = 6345)
?st_read
?CRS
crs(rlp)
WGS84 <- CRS("+proj=longlat +datum=WGS84 +no_defs")
MaStR_Amprion_join_with_georeferences <- read.csv("MaStR_Amprion_join_with_georeferences.csv")
attach(MaStR_Amprion_join_with_georeferences)
#check crs
class(MaStR_Amprion_join_with_georeferences)
coordinates(MaStR_Amprion_join_with_georeferences) <- ~ l_wgs84 + b_wgs84
crs(MaStR_Amprion_join_with_georeferences)
#create crs
WGS84 <- CRS("+proj=longlat +datum=WGS84 +no_defs")
crs(MaStR_Amprion_join_with_georeferences) <- WGS84
crs(MaStR_Amprion_join_with_georeferences)
crs(MaStR_Amprion_join_with_georeferences)
crs(MaStR_Amprion_join_with_georeferences) <- WGS84
coordinates(MaStR_Amprion_join_with_georeferences) <- ~ l_wgs84 + b_wgs84
MaStR_Amprion_join_with_georeferences$l_wgs84 <- gsub(",",".", l_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- gsub(",",".", b_wgs84)
MaStR_Amprion_join_with_georeferences$b_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$b_wgs84)
MaStR_Amprion_join_with_georeferences$l_wgs84 <- as.numeric(MaStR_Amprion_join_with_georeferences$l_wgs84)
#check crs
class(MaStR_Amprion_join_with_georeferences)
coordinates(MaStR_Amprion_join_with_georeferences) <- ~ l_wgs84 + b_wgs84
crs(MaStR_Amprion_join_with_georeferences)
#create crs
WGS84 <- CRS("+proj=longlat +datum=WGS84 +no_defs")
crs(MaStR_Amprion_join_with_georeferences) <- WGS84
crs(MaStR_Amprion_join_with_georeferences)
###################
#create shape file#
###################
class(MaStR_Amprion_join_with_georeferences)
writeOGR(MaStR_Amprion_join_with_georeferences, "C:/Users/Dell/Desktop/MasterThesis/Area_consumption_of_wind_turbines", "distance_calc", driver = "ESRI Shapefile")
##################################
#load points pattern in sf format#
##################################
wts_sf <- st_read("distance_calc.shp")
##################################
#load points pattern in sf format#
##################################
rm(wts_shp)
crs(wts_sf)
#reproject to flat projection
sf_flat <- st_transform(wts_sf, crs = 6345)
crs(sf_flat)
#reproject to flat projection
wts_flat <- st_transform(wts_sf, crs = 6345)
#reproject to flat projection
rm(sf_flat)
#reproject to flat projection
rm(sf)
wts_ppp  <- as.ppp(wts_flat)
plot(wts_ppp)
crs(wts_flat)
rm(wts)
########################
#load boundaries of RLP#
########################
rlp_sf  <- st_read("Borders_RLP_shape/Landesgrenze_RLP.shp")
rm(rlp)
crs(rlp)
crs(rlp_sf)
plot(rlp)
plot(rlp_sf)
#transform to flat
rlp_flat <- st_transform(rlp_sf, crs = 6345)
plot(rlp_flat)
#create owin format
rlp_owin  <- as.owin(rlp_flat)
Window(wts_ppp) <- rlp_owin
plot(wts_ppp, cols=rgb(0,0,0,.2), pch=20)
